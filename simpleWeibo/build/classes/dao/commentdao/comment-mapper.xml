<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.commentdao.ICommentDao">
	<insert id="createCommentForMessage">
		insert into comment (text, messageId, userId, puserId, time) 
			values 
			(
			#{text},
			#{message.messageId},
			#{user.userId},
			#{puser.userId, jdbcType=NUMERIC},
			#{time}
			)
	</insert>
	
	<delete id="deleteComment" parameterType="Integer">
		delete from comment where id = #{comment}
	</delete>
	
	<resultMap type="entity.Comment" id="comment">
		<result property="commentId" column="commentId"/>
		<result property="text" column="text"/>
		<result property="time" column="time"/>
		<association property="user" javaType="entity.User">
			<result property="name" column="username"/>
		</association>
		<association property="puser" javaType="entity.User">
			<result property="name" column="pusername"/>
		</association>
	</resultMap>
	
	<select id="findCommentById" parameterType="Integer" resultMap="comment">
		SELECT
			commentId,
			text,
			time,
			`user`.userName AS username,
			puser.username AS pusername
		FROM
			comment
		LEFT JOIN `user` user ON user.userId = `comment`.userId
		LEFT JOIN `user` puser ON puser.userId = comment.puserId
		WHERE
			commentId = #{id}
	</select> 
	
	<resultMap type="entity.User" id="userList">
		<result property="userId" column="userId"/>
		<result property="age" column="age"/>
		<result property="sex" column="sex"/>
		<result property="email" column="email"/>
		<result property="phone" column="phone"/>
		<result property="remark" column="remark"/>
		<result property="touxiang" column="touxiang"/>
	</resultMap>
	
	<select id="findCommentsByUserId" resultMap="comment">
		SELECT
			commentId,
			text,
			time,
			`user`.userName AS username,
			puser.username AS pusername
		FROM
			comment
		LEFT JOIN `user` user ON user.userId = `comment`.userId
		LEFT JOIN `user` puser ON puser.userId = comment.puserId
		where comment.userId = #{userId}
		limit #{currentPage}, #{pageSize}
	</select>
	
	<select id="findCommentsByMessageId" resultMap="comment">
		SELECT
			commentId,
			text,
			time,
			`user`.userName AS username,
			puser.username AS pusername
		FROM
			comment
		LEFT JOIN `user` user ON user.userId = `comment`.userId
		LEFT JOIN `user` puser ON puser.userId = comment.puserId
		where comment.messageId = #{messageId}
		limit #{currentPage}, #{pageSize}
	</select>
</mapper>