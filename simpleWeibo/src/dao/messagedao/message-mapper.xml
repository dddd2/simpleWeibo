<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.messagedao.IMessageDao">
	<insert id="createMessage">
		INSERT INTO 
			message (text,date,userId,loveNum,commentNum,forwardNum) 
		VALUES 
			(#{text}, #{date}, #{user.userId}, #{loveNum},
			 #{commentNum},#{forwardNum})
	</insert>
	
	<insert id="loveMessage">
		INSERT INTO 
			love (userId, messageId, time)
		VALUES
			(#{userId}, #{messageId}, #{time})
	</insert>
	
	<update id="loveThisMessage" parameterType="Integer">
		UPDATE
			message
		SET 
			loveNum = loveNum + 1
		WHERE
			messageId = #{messageId}
	</update>
	
	<delete id="deleteMessage">
		delete from message where id = #{messageId}
	</delete>
	
	<resultMap type="entity.Message" id="message">
		<result property="messageId" column="messageId"/>
		<result property="text" column="text"/>
		<result property="date" column="date"/>
		<result property="loveNum" column="loveNum"/>
		<result property="commentNum" column="commentNum"/>
		<result property="forwardNum" column="forwardNum"/>
		<association property="user" javaType="entity.User">
			<result property="userId" column="userId" />
			<result property="name" column="userName"/>
			<result property="touxiang" column="touxiang"/>
		</association>
	</resultMap>
	
	<select id="findMessageById" parameterType="Integer" resultMap="message">
		select 
			m.messageId, m.text, m.date, 
			u.userId, u.userName, u.touxiang
		FROM message m
		left join user u on u.userId = m.userId
		where
			m.userId = #{id}
	</select> 
	
	
	
	<select id="findMessagesByUserId" parameterType="Integer" resultMap="message">
		select 
			m.messageId, m.text, m.date, 
			u.userId, u.userName, u.touxiang
		FROM message m
		left join user u on u.userId = m.userId
		where
			m.userId = #{userId}
		ORDER BY m.date DESC
		LIMIT #{currentPage}, #{pageSize}
	</select>
	
	<select id="isLoved" resultType="Integer">
		SELECT
			id
		FROM
			love
		WHERE
			messageId = #{messageId}
		AND userId = #{userId}
	</select>
	
	<select id="findFocusMessagesByUserId" parameterType="Integer" resultMap="message">
		SELECT DISTINCT
			m.text, m.date, m.messageId, 
			m.loveNum, m.commentNum, m.forwardNum,  
			u.userId, u.userName, u.touxiang
		FROM
			fans_focus f
		LEFT JOIN `user` u on u.userId = f.focusPeopleId
		LEFT JOIN message m on m.userId = u.userId
		WHERE
			f.fansId = #{userId} or u.userId = #{userId}
		ORDER BY m.date DESC
		LIMIT #{currentPage}, #{pageSize}
 	</select> 
	
	<select id="findAllMessages" resultMap="message">
		select 
			messageId, text, date, `user`.userId, userName, touxiang
		FROM message
		left join user on user.userId = message.userId
		limit #{currentPage}, #{pageSize}
	</select>
</mapper>